<?xml version="1.0" encoding="UTF-8"?>
<svg version="1.2" baseProfile="tiny" xml:id="svg-root" 
  width="100%" height="100%" 
  viewBox="0 0 480 360" xmlns="http://www.w3.org/2000/svg" 
  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xe="http://www.w3.org/2001/xml-events">
  <!--======================================================================-->
  <!--=  Copyright 2008 World Wide Web Consortium, (Massachusetts          =-->
  <!--=  Institute of Technology, European Research Consortium for         =-->
  <!--=  Informatics and Mathematics (ERCIM), Keio University).            =-->
  <!--=  All Rights Reserved.                                              =-->
  <!--=  See http://www.w3.org/Consortium/Legal/.                          =-->
  <!--======================================================================-->
  <SVGTestCase xmlns="http://www.w3.org/2000/02/svg/testsuite/description/"
    reviewer="ED" owner="AE" desc="Test SVGPoint" status="created" 
    approved="no"
    version="$Revision: 1.3 $" testname="$RCSfile: udom-svgpoint-202-t.svg,v $">
    <d:OperatorScript xmlns:d="http://www.w3.org/2000/02/svg/testsuite/description/" xmlns="http://www.w3.org/1999/xhtml">
      <p>
        This test tests SVGPoint.matrixTransform. To pass, the text at the
        bottom of the screen should read 'passed'.
      </p>
    </d:OperatorScript>
  </SVGTestCase>
  <title xml:id="test-title">$RCSfile: udom-svgpoint-202-t.svg,v $</title>
  <defs>
    <font-face
      font-family="SVGFreeSansASCII"
      unicode-range="U+0-7F">
      <font-face-src>
        <font-face-uri xlink:href="../images/SVGFreeSans.svg#ascii"/>
      </font-face-src>
    </font-face>
  </defs>
  <g xml:id="test-body-content" font-family="SVGFreeSansASCII,sans-serif" font-size="18">
      
    <handler type="text/ecmascript" xe:event="SVGLoad">
      <![CDATA[
      var svg_ns = "http://www.w3.org/2000/svg";
      var xlink_ns = "http://www.w3.org/1999/xlink";
        
      var count=0;
      var topsvg = document.documentElement;
      var startY = 80;
      var rowHeight = 15;
      var fontSize = "10";
      var isPassed = true;
  
      function drawString( text )
      {
        node_to_insert=document.createElementNS(svg_ns,"text");
        node_to_insert.setAttributeNS(null,"font-size", fontSize);	
        node_to_insert.setAttributeNS(null,"x","25");	
        var yVal = startY + count++ * rowHeight;
        node_to_insert.setAttributeNS(null, "y",  yVal.toString()  );
        node_to_insert.textContent=text ;
        document.getElementById( "test-body-content" ).appendChild(node_to_insert);                       
      }
  
      function testMatrixTransform( point, matrix, expected )
      {
        var point1 = topsvg.createSVGPoint(  );
        point1.x = point.x;
        point1.y = point.y;
        drawString( "point = " + point.x + ", " + point.y );
        drawString( "point1 = " + point1.x + ", " + point1.y );
        drawString( "matrix = " + matrix.getComponent(0) + ", "
                                + matrix.getComponent(1) + ", "
                                + matrix.getComponent(2) + ", "
                                + matrix.getComponent(3) + ", "
                                + matrix.getComponent(4) + ", "
                                + matrix.getComponent(5) );
  
        var point2 = point1.matrixTransform( matrix );
        drawString( "point = " + point.x + ", " + point.y );
        drawString( "point1 = " + point1.x + ", " + point1.y );
        drawString( "point2 = " + point2.x + ", " + point2.y );
  
        if ( ( point2.x == expected.x ) && ( point2.y == expected.y ) )
        {
          drawString( "Results match expected values." );
        }
        else
        {
          isPassed = false;
          drawString( "Results do not match expected values! (" + expected.x.toString() + "," + expected.y.toString() + ")" );
        }
      }
  
      try
      {
        var point = topsvg.createSVGPoint(  );
        point.x = 5;
        point.y = 7;
        drawString( "created SVGPoint[ " + point.x+ " , " + point.y + " ];"  );        
      
        var matrix;
        var expected = topsvg.createSVGPoint();
  
        matrix = topsvg.createSVGMatrixComponents( 1, 0, 0, 1, 0, 0 );
        expected.x = 5;
        expected.y = 7;
        testMatrixTransform( point, matrix, expected );
  
        matrix = topsvg.createSVGMatrixComponents( 10, 20, 30, 40, 50, 60 );
        expected.x = 310;
        expected.y = 440;
        testMatrixTransform( point, matrix, expected );
  
        if( isPassed )
        {
          var status = document.getElementById("TestStatus");
          status.setTrait("#text", "passed");
        }
      }
      catch(e)
      {
        isPassed = false;
        drawString("Unexpected exception (" + e.code + ") " + e.name + ": " + e.message);
      }
      ]]>
    </handler>
      
    <g>
          
      <text  x="240" y="40" text-anchor="middle" >SVGPoint.matrixTransform() - basic test</text>
  
      <rect x="330" y="315" width="130" height="40" stroke="blue" fill="none"/>
      <g fill="black">
        <text xml:id="TestStatus" x="333" y="350" font-size="40">failed</text>
      </g>
      
      <g font-family="SVGFreeSansASCII,sans-serif" font-size="32">
        <text xml:id="revision" x="10" y="340" stroke="none" 
          fill="black">$Revision: 1.3 $</text>
      </g>
      <rect xml:id="test-frame" x="1" y="1" width="478" height="358" fill="none" stroke="#000"/>
      <!-- comment out this watermark once the test is approved -->
      <g xml:id="draft-watermark">
        <rect x="1" y="1" width="478" height="20" fill="red" stroke="black" stroke-width="1"/>
        <text font-family="SVGFreeSansASCII,sans-serif" font-weight="bold" font-size="20" x="240" 
          text-anchor="middle" y="18" stroke-width="0.5" stroke="black" fill="white">DRAFT</text>
      </g>                
      
    </g>
    </g>
</svg>
